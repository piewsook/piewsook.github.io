dtype <- combined_set$Data_type
dtype <- combined_set1$Data_type
combined_set_MS <- cbind(combined_set1[,combined_set1$Data_type])
View(combined_set_MS)
View(combined_set_MS)
combined_set_MS <- data.frame()
combined_set_MS <- cbind(combined_set1[,combined_set1$Data_type])
combined_set_MS <- data.frame()
combined_set_MS <- cbind(combined_set_MS, combined_set1[,combined_set1$Data_type])
combined_set_MS <- cbind(combined_set1[,1])
combined_set_MS <- cbind(combined_set_MS, combined_set1[,combined_set1$Data_type])
combined_set_MS <- data.frame()
combined_set_MS <- data.frame()
combined_set_MS <- cbind(combined_set_MS, combined_set1[,1])
combined_set_MS <- cbind(combined_set_MS, combined_set1[,1])
combined_set_MS <- data.frame()
combined_set_MS <- cbind(combined_set_MS, combined_set1[,1])
combined_set_MS <- cbind(combined_set1[,1])
View(combined_set_MS)
combined_set_MS <- cbind(combined_set_MS, combined_set1[,mean_std_index_offset])
View(combined_set_MS)
combined_set_MS <- data.frame()
combined_set_MS <- cbind(as.factor(combined_set1[,1]))
View(combined_set_MS)
summary(combined_set_MS)
str(combined_set_MS)
str(combined_set1)
combined_set_MS <- data.frame()
active_type <- combined_set1$Data_type
combined_set_MS <- cbind(active_type)
active_type <- as.factor(combined_set1$Data_type)
combined_set_MS <- cbind(active_type)
active_type <- as.character(combined_set1$Data_type)
combined_set_MS <- cbind(active_type)
active_type <- as.character(combined_set1$Data_type)
combined_set_MS <- cbind(as.factor(active_type))
active_type <- as.character(combined_set1$Data_type)
combined_set_MS <- cbind(active_type)
combined_set_MS <- cbind(combined_set_MS, combined_set1[,mean_std_index_offset])
View(combined_set_MS)
Data_source <- as.character(combined_set1$Data_type)
combined_set_MS <- cbind(Data_source)
#combined_set_MS <- cbind(combined_set1[,1])
# adding the 79 columns for means and standard deviation date
combined_set_MS <- cbind(combined_set_MS, combined_set1[,mean_std_index_offset])
View(combined_set_MS)
combined_set_MS$Data_source <- as.factor(combined_setMS$Data_source)
combined_set_MS$Data_source <- as.factor(combined_set_MS$Data_source)
View(combined_set_MS)
str(combined_set_MS)
mean_combined_set_MS <- means(combined_set_MS)
mean_combined_set_MS <- mean(combined_set_MS)
mean_combined_set_MS <- colMeans(combined_set_MS)
combined_set_MS <- data.frame()
combined_set_MS <- cbind(combined_set_MS, combined_set1[,mean_std_index_offset])
Data_source <- as.character(combined_set1$Data_type)
combined_set_MS <- cbind(Data_source)
combined_set_MS <- cbind(combined_set_MS, combined_set1[,mean_std_index_offset])
combined_set_MS$Data_source <- NULL
mean_combined_set_MS <- colMeans(combined_set_MS)
write.csv(mean_combined_Set_MS, file="average_combined.csv")
write.csv(mean_combined_set_MS, file="average_combined.csv")
str(mean_combined_set_MS)
mean_data <- data.frame()
mean_data <- cbind(mean_std_index_offset)
View(mean_data)
mean_data <- cbind(mean_combined_set_MS)
mean_data <- data.frame()
mean_data <- cbind(mean_std_index_offset)
mean_data <- cbind(mean_data,mean_combined_set_MS)
View(mean_data)
mean_data <- data.frame()
mean_data <- cbind(mean_std_index_offset)
View(mean_data)
mean_data <- data.frame()
mean_data <- cbind(mean_data,mean_combined_set_MS)
mean_data <- cbind(mean_std_index_offset)
mean_data <- cbind(mean_data,mean_combined_set_MS)
View(mean_data)
View(mean_data)
View(mean_combined_set_MS)
View(mean_data)
mean_data$2 <- null
mean_data$2 <- NULL
mean_data$mean_Std_index_off <- NULL
mean_data$mean_Std_index_offset <- NULL
mean_data <- data.frame()
mean_data <- cbind(mean_std_index_offset)
mean_data <- cbind(mean_data,mean_combined_set_MS)
View(mean_data)
str(mean_data)
colbames(row.names) <- mean_data
colnames(row.names) <- mean_data
View(mean_data)
View(mean_data$mean_std_index_offset)
str(mean_data$mean_std_index_offset)
summary(mean_data$mean_std_index_offset)
summary(mean_data)
write.csv(mean_combined_set_MS, file="average_combined.csv")
summary(mean_combined_set_MS)
str(mean_cmbined_set_MS)
str(mean_combined_set_MS)
View(mean_combined_set_MS)
mean_data <- data.frame()
mean_data <- cbind(mean_data,mean_combined_set_MS)
mean_data <- as.data.frame(mean_combined_set_MS)
View(mean_data)
write.csv(mean_data, file="average_combined.csv")
View(features)
View(combined_set_MS)
#PART1
#Loading files & Preliminary Analysis
#====================================================================
# Prelimnary survey of
filepath <- "r/getdata-projectfiles-UCI HAR Dataset/UCI HAR Dataset/"
#TRAIN FOLDER
# Read x_train.txt
# returns 7352 objects 561 variables
file_X_train <- paste(filepath, "train/X_train.txt", sep="")
x_train <- read.table(file_X_train)
# Read subject_train.txt
# returns 7352 objects 1 variables
file_subject_train <- paste(filepath, "train/subject_train.txt", sep="")
subject_train <- read.table(file_subject_train)
# Read y_train.txt
# returns 7352 objects 1 variables
file_y_train <- paste(filepath, "train/y_train.txt", sep="")
y_train <- read.table(file_y_train)
#TEST FOLDER
# Read X_test.txt
# returns 2947 objects with 561 variables
file_X_test <- paste(filepath, "test/X_test.txt", sep="")
x_test <- read.table(file_X_test)
# Read y_test.txt
# returns 2947 objects with 1 variables
# Range from 1-6
# Corresponding to activity_labels
file_y_test <- paste(filepath, "test/y_test.txt", sep="")
y_test <- read.table(file_y_test)
# Read subject_test.txt
# returns 2947 objects with 1 variables
file_subject_test <- paste(filepath, "test/subject_test.txt", sep="")
subject_test <- read.table(file_subject_test)
# Read activityLlabels
# returns 6 objects with 2 variables
# types of activities
file_activity_labels <- paste(filepath, "activity_labels.txt", sep="")
activity_labels <- read.table(file_activity_labels)
# Read features
# returns 561 objects with 2 variables
# corresponding to the 561 columnes in the tables
file_features <- paste(filepath, "features.txt", sep="")
features <- read.table(file_features)
#PART 2
#3. Adding the descriptive activities as column headers
#====================================================================
## Inserting header into the x_test and x_train data.frames
# 1. Pulling features description from features data.frame
featureslist <- as.factor(features[,2])
# 2. Inserting column name into x_test data.frame
colnames(x_test) <- featureslist
colnames(x_train) <- featureslist
#adding column to x_test to mark it as test results
# 1== test
# 2= =train
x_test_add <- data.frame("TEST", x_test)
x_train_add <- data.frame("TRAIN", x_train)
# Renameing column to Data_type
names(x_test_add)[1] <- "Data_type"
names(x_train_add)[1] <- "Data_type"
#PART 3
#3. Merging Training and Test data
#====================================================================
#combining the test and train results
#contains 10299 objects of 562 variables
combined_set1 <- rbind(x_test_add, x_train_add)
#PART 4
# Subsetting dataset to include just records for means and
# standard deviation
#====================================================================
## Extracts only the measurements on the mean and
## standard deviation for each measuremen
## mean(): Mean value
## std(): Standard deviation
## Analysing features
## Index of features with "means" or "std" in them
## Returns 79 values
mean_std_index <- grep("mean|std", features$V2)
## Subsetting a data.set from combined_set1
## with only columens from means and standard deviation
## offsetting the column by one
# to take into account the addition of one column for data type
mean_std_index_offset <- mean_std_index +1
# Creating new data set that contains the means and standard deviation data
# Returns data.frame of 10299 rows with 80 columns
combined_set_MS <- data.frame()
# adding data type column
Data_source <- as.character(combined_set1$Data_type)
combined_set_MS <- cbind(Data_source)
#combined_set_MS <- cbind(combined_set1[,1])
# adding the 79 columns for means and standard deviation date
combined_set_MS <- cbind(combined_set_MS, combined_set1[,mean_std_index_offset])
combined_set_MS$Data_source <- NULL
# Data set is 79 columns with 10299 rows
View(combined_set_MS)
mean_combined_set_MS <- colMeans(combined_set_MS)
View(featurelist)
View(featureslist)
View(features)
features_codebook <- features[mean_std_index,]
View(features_codebook)
features_codebook$V1 <- NULL
View(features_codebook)
colname(Activity) <- features_codebook$V2
colname("Activity") <- features_codebook$V2
write.csv(mean_data, file="activity_list.csv")
write.csv(features_codebook, file="activity_list.csv")
q1data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ")
View(`q1data`)
agricultureLogical <- subset(q1data, q1data$AGS==6| q1data$ACR==3)
View(agricultureLogical)
which(agricultureLogical)
TRUE.which(agricultureLogical)
logical(agricultureLogical)
as.logical(agricultureLogical)
agricultureLogical <- as.logical(subset(q1data, q1data$AGS==6| q1data$ACR==3))
agricultureLogical <- as.logical(subset(q1data, q1data$AGS==6| q1data$ACR==3))
View(agricultureLogical)
agricultureLogical <- q1data$AGS==6| q1data$ACR==3
true.which(agricultureLogical)
which(agricultureLogical)
install.packages("jpeg")
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ")
library("jpeg", lib.loc="~/R/win-library/3.1")
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ")
readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg ")
readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
readJPEG("getdata-jeff.jpg")
imageData <- readJPEG("getdata-jeff.jpg")
imageData <- readJPEG("getdata-jeff.jpg", native=TRUE)
Summary(imageData)
imageData <- readJPEG("getdata-jeff.jpg", native=TRUE,  mode="wb")
quantile(imageData, c(30,80))
quantile(imageData, probs = c(.3, .8))
q3domestic <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
q3educate <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ")
q3domestic <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", stringsAsFactors=FALSE)
q3educate <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ", stringsAsFactors=FALSE)
View(`q3domestic`)
View(`q3educate`)
mergeData = merge(q3domestic, d3educate, by.x="X", by.y="CountryCode", all=TRUE)
mergeData = merge(q3domestic, q3educate, by.x="X", by.y="CountryCode", all=TRUE)
View(mergeData)
mergeData = merge(q3domestic, q3educate, by.x="X", by.y="CountryCode", all=TRUE)
mergeSortData = mergeData[order(-Gross.domestic.product.2012)]
mergeSortData = mergeData[order(Gross.domestic.product.2012)]
mergeData = merge(q3domestic, q3educate, by.x="X", by.y="CountryCode", all=TRUE)
View(mergeData)
mergeSortData = mergeData[order(Gross.domestic.product.2012),]
mergeSortData <- mergeData[order(Gross.domestic.product.2012),]
mergeSortData <- mergeData[order(-Gross.domestic.product.2012),]
View(mergeData)
mergeSortData <- mergeData[order(-X),]
mergeData = merge(q3domestic, q3educate, by.x="X", by.y="CountryCode", all=TRUE)
View(mergeData)
mergeSortData <- mergeData[order(X),]
mergeSortData <- mergeData[order(-Special.Notes),]
q3domestic <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", stringsAsFactors=FALSE)
q3educate <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ", stringsAsFactors=FALSE)
mergeData = merge(q3domestic, q3educate, by.x="X", by.y="CountryCode", all=TRUE)
View(mergeData)
mergeSortData <- mergeData[order(-Gross.domestic.product.2012),]
mergeSortData <- mergeData[order(-mergeData$Gross.domestic.product.2012),]
mergeSortData <- mergeData[order(-mergeData$Gross.domestic.product.2012)]
mergeSortData <- mergeData[order(mergeData$Gross.domestic.product.2012),]
View(mergeData)
View(mergeSortData)
str(mergeSortData)
mergeSortData <- mergeData[order(-mergeData$Gross.domestic.product.2012),]
mergeSortData <- mergeData[order(- mergeData$Gross.domestic.product.2012),]
mergeSortData <- mergeData[order(as.numeric(mergeData$Gross.domestic.product.2012)),]
View(mergeSortData)
incomeMergeData <- subset(mergeData, mergeData$income=="High income: OECD")
incomeMergeData <- subset(mergeData, mergeData$Income.Group=="High income: OECD")
meanIncomeMergeData <- mean(incomeMergeData)
View(incomeMergeData)
meanIncomeMergeData <- mean(incomeMergeData$Income.Group)
meanIncomeMergeData <- colmean(incomeMergeData$Income.Group)
meanIncomeMergeData <- colmeans(incomeMergeData$Income.Group)
meanIncomeMergeData <- colMeans(incomeMergeData$Income.Group)
meanIncomeMergeData <- mean(incomeMergeData$Gross.domestic.product.2012)
meanIncomeMergeData <- mean(as.numeric(incomeMergeData$Gross.domestic.product.2012))
summary(mergeSortData)
mergeSortData$Income <- as.factor(mergeSortData$Income.Group)
summary(mergeSortData)
mergeSortIncome <- subset(mergeSortData, mergeSortData$Income = "Lower middle income")
mergeSortIncome <- subset(mergeSortData, mergeSortData$Income == "Lower middle income")
View(mergeSortIncome)
q1data <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ")
agricultureLogical <- q1data$AGS==6| q1data$ACR==3
which(agricultureLogical)
View(agricultureLogical)
q1 <-read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
View(`q1`)
qq1 <-read.csv("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
View(qq1)
sqq1 <- strsplit(qq1, "wgtp")
qq1names <- colnames(qq1)
sqq1 <- strsplit(qq1names, "wgtp")
View(sqq1)
sqq1[123]
qq2 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
View(qq2)
qq2gdp <- qq2[,qq2$X.3]
qq2gdp <- qq2[,5]
View(qq2gdp)
qq2gdpclean <- qq2gdp[c(5,194),]
qq2gdpclean <- qq2gdp[(5,194),]
qq2ddp[5,]
qq2gdp[5,]
qq2gdpclean <- strsplit(qq2gdp, ",")
qq2gdpclean <- strsplit(qq2gdp, ",")
qq2 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
qq2gdp <- qq2[,5]
qq2gdpclean <- strsplit(qq2gdp, ",")
View(gg2gdp)
View(qq2gdp)
qq2gpdclean <- sub(",","",qq2gdp)
View(qq2gdpclean)
View(qq2gpdclean)
qq2gpdclean <- sub(",","",qq2gpdclean)
View(qq2gpdclean)
qq2gpdclean(9:194)
qq2gpdclean[c(4:194),]
qq2gpdclean[4:194,]
qq2gpdclean[4,]
subset(qq2gpdclean, select=c(9:194))
qq2gpdclean[c(4:194)]
qq2clean <-qq2gpdclean[c(4:194)]
View(qq2clean)
qq2cleanMean <- mean(dd2clean)
qq2cleanMean <- mean(qq2clean)
qq2cleanMean <- mean(as.numeric(qq2clean))
View(qq2cleanMean)
qq2 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
qq2gdp <- qq2[,5]
qq2gpdclean <- sub(",","",qq2gpdclean)
qq2clean <-qq2gpdclean[c(5:194)]
qq2cleanMean <- mean(as.numeric(qq2clean))
qq3 <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
View(qq3)
countryNames <- qq3[,4]
countedUnited <-   grep("*United", countryNames)
View(counedUnited)
View(counedUnited)
View(countedUnited)
countedUnited <-   grep("^United", countryNames)
countryNames <- qq3[,4]
countedUnited <-   grep("^United", countryNames)
counted <-   grep("^United", countryNames)
counted <-   grep("^United", as.character(countryNames))
View(countryNames)
counted <-   grep("United", as.character(countryNames))
counted <-   grep("boom", as.character(countryNames))
counted <-   grep("state", as.character(countryNames))
counted <-   grep("united", as.character(countryNames))
counted <-   grep("china", as.character(countryNames))
counted <-   grep("ch", as.character(countryNames))
qq4gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ")
qq4edu <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ")
View(qq4edu)
View(qq4gdp)
qq4gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", stringsAsFactors=FALSE)
qq4edu <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv ", stringsAsFactors=FALSE)
mergeData = merge(qq4gdp, qq4edu, by.x="X", by.y="CountryCode", all=TRUE)
View(mergeData)
june <- grep("united", mergerData)
june <- grep("united", mergeData)
june <- grep("june", mergeData)
june <- grep("june", qq4gdp)
june <- grep("june", qq4edu)
specialNote <- grep("june", mergeData[,19])
specialNote <- mergeData[,19]
View(specialNote)
findJune <- grep("June", specialNote)
findJune <- count(grep("June", specialNote))
View(fundJune)
View(findJune)
findJune <- grep("June", specialNote, value=TRUE)
View(findJune)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
datesCol <- amzn[,1]
View(datesCol)
datasColDF <- as.data.frame(datesCol)
View(datasColDF)
View(amzn)
amDF <- as.data.frame(amzn)
View(amDF)
amSub <- grep("*2012", amDF[,1], value=TRUE)
amSub <- grep("*2012", amDF[,0], value=TRUE)
amSub <- grep("77*", amDF[,1], value=TRUE)
amSub <- grep("2012*", index(amDF), value=TRUE)
amSub <- grep("2012*", index(amDF))
amSub <- grep("*2012", index(amDF))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amDF <- as.data.frame(amzn)
amSub <- amDF[c(1000-1908),]
View(amSub)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
amSub <- amDF[c(1000:1908),]
View(amSub)
Install.packages("rcharts")
Install.packages("devtools")
install.packages("devtools")
install.packages("rcharts")
install_github('rCharts', 'ramnathv')
install.packages("rcharts")
install.packages("rcharts")
install_github("ramnathv/rCharts@dev")
library("devtools", lib.loc="~/R/win-library/3.1")
install_github("ramnathv/rCharts@dev")
install.packages('base64enc')
library("base64enc", lib.loc="~/R/win-library/3.1")
install_github("ramnathv/rCharts@dev")
install.packages("knitr")
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
install.packages("googleVis")
murder <- c(13,2,0,5,1,1,0,1,2)
hist(murder)
var(murder)
sd(murder)
mean(murder)
boundaries <- c(3,5,15,5,2)
hist(boundaries)
hist(boundaries, breaks=5)
hist(boundaries, breaks=c(7.5, 12.5, 22.5, 27.5, 32.5))
library(shiny)
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
shiny::runApp('R/shiny/shiny1')
library("slidify", lib.loc="~/R/win-library/3.1")
author("dataproduct")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
## How to use
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
shiny::runApp('~/R/shiny/shiny1')
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
shiny::runApp('~/R/shiny/shiny1')
